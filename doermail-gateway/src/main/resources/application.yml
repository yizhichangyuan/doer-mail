spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848

    sentinel:
      transport:
        dashboard: 127.0.0.1:8333
        port: 8719  # 默认端口，每个微服务与控制台传输数据端口

    zipkin:
      base-url: http://localhost:9411  # zipkin服务器地址
      # 关闭服务发现，否则Spring Cloud会把zipkin的url当做服务名称
      discovery-client-enabled: false
      sender:
        type: web # 设置使用 http 的方式传输数据
    sleuth:
      sampler:
        probability: 1.0 # 设置抽样采集率为100%，默认为0.1，即10%

    gateway:
      routes:
        - id: ware_route
          uri: lb://doermail-ware
          predicates:
            - Path= /api/ware/**
          filters:
            - RewritePath=/api(?<segment>/?.*), $\{segment}

        - id: doermall_seckill_route
          # lb为load_balance使用复杂均衡，后面为服务名
          uri: lb://doermail-seckill
          predicates:
            - Host=seckill.doermall.com

        - id: host_route
          # lb为load_balance使用复杂均衡，后面为服务名
          uri: lb://doermail-product
          predicates:
            - Host=doermall.com,item.doermall.com

        - id: doermall_search_route
          # lb为load_balance使用复杂均衡，后面为服务名
          uri: lb://doermail-search
          predicates:
            - Host=search.doermall.com

        - id: doermall_auth_route
          # lb为load_balance使用复杂均衡，后面为服务名
          uri: lb://doermail-auth-server
          predicates:
            - Host=auth.doermall.com

        - id: doermall_cart_route
          # lb为load_balance使用复杂均衡，后面为服务名
          uri: lb://doermail-cart
          predicates:
            - Host=cart.doermall.com

        - id: doermall_order_route
          # lb为load_balance使用复杂均衡，后面为服务名
          uri: lb://doermail-order
          predicates:
            - Host=order.doermall.com

        - id: doermall_member_route
          # lb为load_balance使用复杂均衡，后面为服务名
          uri: lb://doermail-member
          predicates:
            - Host=member.doermall.com

        - id: product_route
          uri: lb://doermail-product
          predicates:
            - Path= /api/product/**,/hello
          filters:
            - RewritePath=/api(?<segment>/?.*), $\{segment}
            # http://localhost:88/api/product/category/list/tree -> http://localhost:10000/product/category/list/tree
            # 所以只需要保留api后面的部分然后转发给lb://doermail-product

        - id: coupon_route
          uri: lb://doermail-coupon
          predicates:
            - Path= /api/coupon/**
          filters:
            - RewritePath=/api(?<segment>/?.*), $\{segment}

        - id: third_party_route
          uri: lb://doermail-third-party
          predicates:
            - Path= /api/thirdparty/**
          filters:
            - RewritePath= /api/thirdparty(?<segment>/?.*), $\{segment}

        - id: member_route
          uri: lb://doermail-member
          predicates:
            - Path= /api/member/**
          filters:
            - RewritePath=/api(?<segment>/?.*), $\{segment}

        - id: admin_route
          # lb为load_balance使用复杂均衡，后面为服务名
          uri: lb://renren-fast
          predicates:
            - Path= /api/**
          filters:
            - RewritePath=/api(?<segment>/?.*), /renren-fast$\{segment}
             # 前端项目发送请求，都有/api
             # 前端请求http://localhost:88/api/captcha
             # 网关在Nacos找到可用renren-fast服务及端口号后，转发http://地址:端口号/api/captcha
             # 而实际访问应该是http://localhost:8080/renren-fast/captcha，这里就应该用到Filter进行重写路径
             # 先经过predicates后判断路径符合，符合后对请求路径进行重写在将重写后的路径发送给renren-fast服务
             # 将请求的captcha取出与renren-fast拼接

  application:
    name: doermail-gateway

server:
  port: 88
